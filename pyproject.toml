[build-system]
requires = ["setuptools>=61.0"] # Specify the build backend requirement
build-backend = "setuptools.build_meta" # Specify the build backend module

[project]
name = "avpoetica" # The name of your package
version = "0.1.0" # The current version
authors = [
  { name="Hung Tran", email="tranphihung8383@gmail.com" }, # Your name and email
]
description = "A mini-module for refining Vietnamese poetry generated by an LLM Agent." # Short description
readme = "README.md" # Path to your README file for the long description
requires-python = ">=3.7" # Minimum Python version required
classifiers = [
    # Classifiers help users find your package on PyPI
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License", # Choose an appropriate license
    "Operating System :: OS Independent",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["vietnamese poetry", "llm", "ai", "nlp", "poetry generation"] # Keywords to help discoverability

# Dependencies are listed under [project.dependencies]
dependencies = [
  "google-cloud-aiplatform",
  "python-dotenv",
  "google-adk"
]

[project.urls]
"Homepage" = "https://github.com/tph-kds/avpoetica" # Link to your project's homepage/repo
"Bug Tracker" = "https://github.com/tph-kds/avpoetica/issues" # Link to your issue tracker

# Optional: Define entry points for command-line scripts
# [project.scripts]
# avpoetica = "avp.app.cli:main" # 'command_name = package.module:function'

# Optional: Configuration specific to setuptools
[tool.setuptools]
packages = ["avp", "avp.agents", "avp.agents.tools", "avp.agents.tools.google_aiplatform", "avp.app"] # Explicitly list your packages or let setuptools find them

# # You can also configure setuptools to find packages automatically
# [tool.setuptools.packages.find]
# where = ["."] # Search for packages in the current directory
# include = ["avp*"] # Only include packages starting with 'avp'

# Optional: Configuration for development dependencies or tools
[project.optional-dependencies]
dev = [
  "pytest",
  "flake8",
  "black",
]

[tool.pytest.ini_options]
testpaths = ["avp/workprocessing/tests"]

[tool.black]
line-length = 88

[tool.flake8]
max-line-length = 88



